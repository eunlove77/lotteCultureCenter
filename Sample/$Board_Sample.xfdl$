<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Board_Sample" width="1280" height="720" titletext="New Form" onload="Board_Sample_onload">
    <Layouts>
      <Layout height="720" width="1280">
        <Grid id="Grid00" taborder="0" left="35" top="60" width="1025" height="270" binddataset="ds_list" oncellclick="Grid00_oncellclick" ondrag="Grid00_ondrag" ondrop="Grid00_ondrop">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="153"/>
                <Column size="164"/>
                <Column size="165"/>
                <Column size="80"/>
                <Column size="48"/>
                <Column size="48"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="title" expandshow="show" expandimage="url('theme://images/btn_expand.png')"/>
                <Cell col="1" text="atchFileId"/>
                <Cell col="2" text="thnlFileId"/>
                <Cell col="3" text="seq"/>
                <Cell col="4"/>
                <Cell col="5"/>
              </Band>
              <Band id="body">
                <Cell text="bind:title"/>
                <Cell col="1" text="bind:atchFileId"/>
                <Cell col="2" text="bind:thnlFileId"/>
                <Cell col="3" text="bind:seq"/>
                <Cell col="4" expr="expr:dataset.getRowType(currow) "/>
                <Cell col="5" text="bind:sort"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="Button00" taborder="1" text="등록" left="940" top="335" width="120" height="50" onclick="Button00_onclick"/>
        <Button id="Button01" taborder="2" text="엑셀다운로드" left="35" top="340" width="120" height="50" onclick="Button01_onclick"/>
        <Button id="Button02" taborder="3" text="엑셀가져오기" left="170" top="340" width="120" height="50" onclick="Button02_onclick"/>
        <Grid id="Grid01" taborder="4" left="35" top="410" width="605" height="170" binddataset="Dataset00">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row band="head" size="24"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="name"/>
                <Cell col="1" text="age"/>
              </Band>
              <Band id="body">
                <Cell text="bind:name"/>
                <Cell col="1" text="bind:age"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Combo id="Combo00" taborder="5" text="title" left="35" top="615" width="150" height="30" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="0" value="0">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">title</Col>
                <Col id="datacolumn">title</Col>
              </Row>
            </Rows>
          </Dataset>
        </Combo>
        <Edit id="chngVal" taborder="6" left="197" top="615" width="140" height="30"/>
        <Button id="btnBatchChng" taborder="7" text="일괄변경" left="350" top="615" width="120" height="30" onclick="btnBatchChng_onclick"/>
        <Button id="btnBatchCncl" taborder="8" text="일괄취소" left="487" top="615" width="120" height="30" onclick="btnBatchCncl_onclick"/>
        <Button id="Button03" taborder="9" text="정렬저장" left="720" top="340" width="120" height="50" onclick="Button03_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_list">
        <ColumnInfo>
          <Column id="title" type="STRING" size="256"/>
          <Column id="atchFileId" type="STRING" size="256"/>
          <Column id="thnlFileId" type="STRING" size="256"/>
          <Column id="seq" type="STRING" size="256"/>
          <Column id="sort" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <ExcelExportObject id="ExcelExportObject00" onsuccess="ExcelExportObject00_onsuccess" onprogress="ExcelExportObject00_onprogress" onerror="ExcelExportObject00_onerror" exportuitype="exportprogress" exportmessageprocess="%d [ %d / %d ]"/>
      <ExcelImportObject id="ExcelImportObject00"/>
      <Dataset id="Dataset00">
        <ColumnInfo>
          <Column id="name" type="STRING" size="256"/>
          <Column id="age" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**************************************************************************
 * include 영역 
 **************************************************************************/
include "Base::libCommon.xjs";

/**************************************************************************
 * FORM 변수 선언 영역
 **************************************************************************/
this.application = null;
this.domain = "";
this.excelImportExport = "";

/**************************************************************************
 * FORM EVENT 영역(onload)
 **************************************************************************/
this.Board_Sample_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.application = nexacro.getApplication();	
	//this.domain = this.application.getVariable("domain");
	this.excelImportExport = this.application.getVariable("excelImportExport");
	
	this.fn_list();
};


this.fn_list = function ()
{	
	var strSvcId    = "list";
	var strSvcUrl   = this.application.Admin_svc + "::sample/selectSampleList.do";
	var inData      = "";
	var outData     = "ds_list=output1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
            strSvcUrl ,       // trabsaction을 요청할 주소
            inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
            outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
            strArg,         // 입력값으로 보낼 arguments, a=b
            callBackFnc,       // transaction의 결과를 받을 Function 이름
            isAsync);         // 비동기통신 여부 [생략가능]
};

this.fnCallback = function(svcID,errorCode,errorMsg)
{
  // 에러 시 화면 처리 내역
  if(errorCode != 0)
  {
    this.alert(errorCode+"\n"+errorMsg);
    return;
  }

  switch(svcID)
  {
    case "list":
      
	  break;
	case "sort":
		this.alert("정렬 업데이트 완료");
		this.fn_list();
		break;
  }
};

this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.parent.parent.parent.param.TAB_CLOSE = false;
	this.parent.param = {
		seq : ""
	};	
	this.parent.set_url("Sample::Board_Reg_Sample.xfdl");
};

this.Grid00_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var objDs = obj.getBindDataset();
	var seq = objDs.getColumn(e.row, "seq");

	this.parent.parent.parent.param.TAB_CLOSE = false;
	this.parent.param = {
		seq : seq
	};	
	
	this.parent.set_url("Sample::Board_Reg_Sample.xfdl");
};

this.ExcelExportObject00_onsuccess = function(obj:nexacro.ExcelExportObject,e:nexacro.ExcelExportEventInfo)
{
	var str = "";

	str += "\n=========== onsuccess event start=================";
	str += "\ne.eventid : " + e.eventid;
	str += "\ne.url: " +  e.url;  
	str += "\ne.id :"+e.id;
	str += "\ne.fromobject :"+e.fromobject;
	str += "\ne.fromreferenceobject  :"+e.fromreferenceobject;

	trace(str);
};

this.ExcelExportObject00_onprogress = function(obj:nexacro.ExcelExportObject,e:nexacro.ExcelExportProgressEventInfo)
{
	var str = "";

  str += "\n=========== onprogress event start================";
  str += "\ne.eventid  :"+e.eventid;
  str += "\ne.id :"+e.id;
  str += "\ne.fromobject :"+e.fromobject;
  str += "\ne.fromreferenceobject  :"+e.fromreferenceobject;
  str += "\ne.itemindex :"+e.itemindex;
  str += "\ne.itemtype :"+e.itemtype;
  str += "\ne.recordindex :"+e.recordindex;  

  trace(str);
};

this.ExcelExportObject00_onerror = function(obj:nexacro.ExcelExportObject,e:nexacro.ExcelExportErrorEventInfo)
{
	 var str = "";

  str += "\n=========== onerror event start===================";
  str += "\ne.eventid :"+e.eventid;
  str += "\ne.id :"+e.id;
  str += "\ne.fromobject :"+e.fromobject;
  str += "\ne.fromreferenceobject :"+e.fromreferenceobject;
  str += "\ne.errorcode :"+e.errorcode;
  str += "\ne.errormsg :"+e.errormsg;  

  trace(str);
};

this.Button01_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.ExcelExportObject00.set_exporturl(this.application.Domain + this.excelImportExport);
	this.ExcelExportObject00.addExportItem(nexacro.ExportItemTypes.GRID, this.Grid00, "Sheet1!A1");  	
	this.ExcelExportObject00.set_exportfilename("ExcelExport_Sample");
	this.ExcelExportObject00.exportData();  
};

this.Button02_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.ExcelImportObject00.set_importtype(nexacro.ImportTypes.EXCEL);
	this.ExcelImportObject00.set_importurl(this.application.Domain + this.excelImportExport);
	this.ExcelImportObject00.importData("", "Sheet1!A1:B3", "Dataset00");
};

this.btnBatchChng_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var objDs = this.ds_list;
	var columnTitle = this.Combo00.value;
	var chngVal = this.chngVal.value;
	
	if(!this.gfn_isNull(chngVal)){
		objDs.set_enableevent(false);
		for(var i = 0 ; i < objDs.getRowCount() ; i++){
			objDs.setColumn(i, columnTitle, chngVal);
		}
		objDs.set_enableevent(true);
	}else{
		this.alert("값을 입력해주세요.");
	}
};

this.btnBatchCncl_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.ds_list.reset();
};

this.Grid00_ondrag = function(obj:nexacro.Grid,e:nexacro.GridDragEventInfo)
{
	this.Grid00.set_cursor("move");
	if(e.row >= 0) {
		e.userdata = e.row;
		return true;
	}
	
};

this.Grid00_ondrop = function(obj:nexacro.Grid,e:nexacro.GridDragEventInfo)
{	
	this.Grid00.set_cursor("default");
	if(e.row >= 0 ) {
		this.ds_list.moveRow(e.userdata, e.row);
	}
};

this.Button03_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	var strSvcId    = "sort";
	var strSvcUrl   = this.application.Admin_svc + "::sample/updateSort.do";
	var inData      = "sampleList=ds_list";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
            strSvcUrl ,       // trabsaction을 요청할 주소
            inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
            outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
            strArg,         // 입력값으로 보낼 arguments, a=b
            callBackFnc,       // transaction의 결과를 받을 Function 이름
            isAsync);         // 비동기통신 여부 [생략가능]

};
]]></Script>
  </Form>
</FDL>
