<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="AuthMng" width="1280" height="770" titletext="New Form" onload="AuthMng_onload">
    <Layouts>
      <Layout height="770" width="1280">
        <Combo id="deptList" taborder="0" text="" left="9" top="71" width="150" height="30" innerdataset="ds_dept_list" codecolumn="cd" datacolumn="cdNm" onitemchanged="deptList_onitemchanged" index="0" value=""/>
        <Grid id="GridAuthList" taborder="1" left="10" top="105" height="645" binddataset="ds_menu_auth" nodatatext="부서를 선택해주세요." oncellclick="GridAuthList_oncellclick" treeusecheckbox="false" treeuseimage="false" autofittype="col" right="10" treeinitstatus="collapse,null">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="438"/>
                <Column size="120"/>
                <Column size="120"/>
                <Column size="120"/>
                <Column size="120"/>
                <Column size="120"/>
                <Column size="120"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="메뉴명"/>
                <Cell col="1" text="접근가능여부"/>
                <Cell col="2" text="검색가능여부"/>
                <Cell col="3" text="저장가능여부"/>
                <Cell col="4" text="삭제가능여부"/>
                <Cell col="5" text="프린트가능여부"/>
                <Cell col="6" text="엑셀다운가능여부"/>
              </Band>
              <Band id="body">
                <Cell text="bind:menuNm" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:dpth" expandshow="hide" treestartlevel="2"/>
                <Cell col="1" text="bind:accYn" displaytype="checkboxcontrol" edittype="checkbox" checkboxfalsevalue="N" checkboxtruevalue="Y"/>
                <Cell col="2" text="bind:accSrchYn" checkboxfalsevalue="N" checkboxtruevalue="Y" displaytype="expr:childCnt &gt; 0 ? 'none' : 'checkboxcontrol'" edittype="expr:childCnt &gt; 0 ? 'none' : (accYn == 'Y' ?  'checkbox' : 'none')"/>
                <Cell col="3" text="bind:accSaveYn" displaytype="expr:childCnt &gt; 0 ? 'none' : 'checkboxcontrol'" edittype="expr:childCnt &gt; 0 ? 'none' : (accYn == 'Y' ?  'checkbox' : 'none')" checkboxfalsevalue="N" checkboxtruevalue="Y"/>
                <Cell col="4" text="bind:accDelYn" checkboxfalsevalue="N" checkboxtruevalue="Y" displaytype="expr:childCnt &gt; 0 ? 'none' : 'checkboxcontrol'" edittype="expr:childCnt &gt; 0 ? 'none' : (accYn == 'Y' ?  'checkbox' : 'none')"/>
                <Cell col="5" text="bind:accPrtYn" displaytype="expr:childCnt &gt; 0 ? 'none' : 'checkboxcontrol'" edittype="expr:childCnt &gt; 0 ? 'none' : (accYn == 'Y' ?  'checkbox' : 'none')" checkboxfalsevalue="N" checkboxtruevalue="Y"/>
                <Cell col="6" text="bind:accExlYn" checkboxfalsevalue="N" checkboxtruevalue="Y" displaytype="expr:childCnt &gt; 0 ? 'none' : 'checkboxcontrol'" edittype="expr:childCnt &gt; 0 ? 'none' : (accYn == 'Y' ?  'checkbox' : 'none')"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnSave" taborder="2" text="저장" top="71" height="30" onclick="btnSave_onclick" cssclass="btn_WF_High" right="10" width="120"/>
        <Static id="txtMenuNm" taborder="3" text="메뉴명" left="10" top="10" height="32" right="10" cssclass="stc_WF_TxtMenu"/>
        <Button id="Button04_00" taborder="4" text="" top="0" width="21" height="21" cssclass="btn_WF_SquStarFav" right="0"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_menu_auth">
        <ColumnInfo>
          <Column id="deptCd" type="STRING" size="256"/>
          <Column id="menuSeq" type="STRING" size="256"/>
          <Column id="deptNm" type="STRING" size="256"/>
          <Column id="menuNm" type="STRING" size="256"/>
          <Column id="accYn" type="STRING" size="256"/>
          <Column id="accSrchYn" type="STRING" size="256"/>
          <Column id="accSaveYn" type="STRING" size="256"/>
          <Column id="accDelYn" type="STRING" size="256"/>
          <Column id="accPrtYn" type="STRING" size="256"/>
          <Column id="accExlYn" type="STRING" size="256"/>
          <Column id="childCnt" type="STRING" size="256"/>
          <Column id="parntSeq" type="STRING" size="256"/>
          <Column id="lftVal" type="STRING" size="256"/>
          <Column id="rhtVal" type="STRING" size="256"/>
          <Column id="dpth" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_dept_list">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cdNm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_search">
        <ColumnInfo>
          <Column id="deptCd" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**************************************************************************
 * include 영역 
 **************************************************************************/
include "Base::libCommon.xjs";

/**************************************************************************
 * FORM 변수 선언 영역
 **************************************************************************/
this.application = null;


/**************************************************************************
 * FORM EVENT 영역(onload)
 **************************************************************************/

this.AuthMng_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.application = nexacro.getApplication();

	this.txtMenuNm.set_text(obj.parent.parent.fvMenuNM);	

	this.fn_data_list();
	
	//this.fn_list();

};


this.deptList_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	if(obj.value != ""){
		this.ds_search.setColumn(0, "deptCd", obj.value);
		this.fn_list();
	}else{
		this.ds_menu_auth.clearData();
	}
	
};

this.btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	if(!this.gfn_isNull(this.deptList.value)){
		this.fn_save();
	}else{
		this.alert("부서를 선택해주세요.");
	}
};


this.GridAuthList_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{	
	//var accYnCellPos = obj.getBindCellIndex("body", "accYn");	
	//var checkVal = obj.getCellValue(e.row, accYnCellPos);	
	
	var objDs = obj.getBindDataset();	
	var checkVal, menuSeq, parntSeq, childCnt = -1;	
	
	checkVal = objDs.getColumn(e.row, "accYn");
	childCnt = objDs.getColumn(e.row, "childCnt");
	
	if(checkVal == "N"){
		
		if( childCnt == 0 ){
			objDs.setColumn(e.row, "accSrchYn", "N");
			objDs.setColumn(e.row, "accSaveYn", "N");
			objDs.setColumn(e.row, "accDelYn", "N");
			objDs.setColumn(e.row, "accPrtYn", "N");
			objDs.setColumn(e.row, "accExlYn", "N");
		}else if( childCnt > 0 ){
			this.fn_child_chk_clear(e.row, objDs);
		}
		
	}else{
		this.fn_parnt_chk(objDs, 3);
		this.fn_parnt_chk(objDs, 2);
	}
};

/**************************************************************************
 * 사용자 FUNCTION 영역
 **************************************************************************/
 this.fn_parnt_chk = function(objDs, dpth){
	var menuSeq
	var checkYCnt, childCnt;
	
	for(var i = 0 ; i < objDs.getRowCount() ; i++){			
		checkYCnt = 0;
		childCnt = objDs.getColumn(i, "childCnt");
		
		if( dpth == objDs.getColumn(i, "dpth") && childCnt > 0 ){
			menuSeq = objDs.getColumn(i, "menuSeq");
				
			for(var j = 0 ; j < objDs.getRowCount() ; j++){			
				if( menuSeq == objDs.getColumn(j, "parntSeq") ){						
					if( objDs.getColumn(j, "accYn") == "Y" ){
						checkYCnt++;						
					}
				}
			}
			
			if(childCnt == checkYCnt){
				objDs.setColumn(i, "accYn", "Y");
			}
		}
	}	
 }
 
 this.fn_child_chk_clear = function(rowIndex, objDs){
	var lftVal, rhtVal;
	
	lftVal = objDs.getColumn(rowIndex, "lftVal");
	rhtVal = objDs.getColumn(rowIndex, "rhtVal");
	
	for(var i = 0 ; i < objDs.getRowCount() ; i++){		
		if( lftVal < objDs.getColumn(i, "lftVal") && rhtVal > objDs.getColumn(i, "rhtVal") ){
			objDs.setColumn(i, "accYn", "N");
			objDs.setColumn(i, "accSrchYn", "N");
			objDs.setColumn(i, "accSaveYn", "N");
			objDs.setColumn(i, "accDelYn", "N");
			objDs.setColumn(i, "accPrtYn", "N");
			objDs.setColumn(i, "accExlYn", "N");
		}
		
	}
 }
 
this.fn_list = function ()
{	

	var strSvcId    = "list";
	var strSvcUrl   = this.application.Admin_svc + "::/auth/list.do";
	var inData      = "search=ds_search";
	var outData     = "ds_menu_auth=output1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
            strSvcUrl ,       // trabsaction을 요청할 주소
            inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
            outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
            strArg,         // 입력값으로 보낼 arguments, a=b
            callBackFnc,       // transaction의 결과를 받을 Function 이름
            isAsync);         // 비동기통신 여부 [생략가능]
};


this.fn_data_list = function ()
{	
	var strSvcId    = "dataList";
	var strSvcUrl   = this.application.Admin_svc + "::/auth/getDataList.do";
	var inData      = "";
	var outData     = "ds_dept_list=output1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
            strSvcUrl ,       // trabsaction을 요청할 주소
            inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
            outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
            strArg,         // 입력값으로 보낼 arguments, a=b
            callBackFnc,       // transaction의 결과를 받을 Function 이름
            isAsync);         // 비동기통신 여부 [생략가능]
};

this.fn_save = function ()
{	

	var strSvcId    = "save";
	var strSvcUrl   = this.application.Admin_svc + "::/auth/update.do";
	var inData      = "authList=ds_menu_auth:U";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
            strSvcUrl ,       // trabsaction을 요청할 주소
            inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
            outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
            strArg,         // 입력값으로 보낼 arguments, a=b
            callBackFnc,       // transaction의 결과를 받을 Function 이름
            isAsync);         // 비동기통신 여부 [생략가능]
};


this.fnCallback = function(svcID,errorCode,errorMsg)
{
  // 에러 시 화면 처리 내역
  if(errorCode != 0)
  {
    this.alert(errorCode+"\n"+errorMsg);
	
    return;
  }

  switch(svcID)
  {
    case "list":
      if(this.ds_menu_auth.rowcount < 1){
        this.alert("조회된 결과가 없습니다.");
      }else{
	  
	  }
	  break;
	case "dataList":
		this.deptList.set_index(0);
		break;
	case "save":
		this.alert("저장되었습니다.");
		break;
	
  }
};



]]></Script>
  </Form>
</FDL>
