<?xml version="1.0" encoding="utf-8"?>
<ADL version="2.0">
  <Application id="Application_Desktop" screenid="Desktop_screen" onload="Application_onload" licenseurl="/admin/NexacroN_client_license.xml">
    <Layout>
      <MainFrame id="mainframe" showtitlebar="true" showstatusbar="false" left="0" top="0" width="1920" height="1080" titletext="롯데문화센터" resizable="true">
        <VFrameSet id="VFrameSet00" separatesize="50,50,*,30" border="0px none" width="1366">
          <Frames>
            <ChildFrame id="TopFrame" formurl="FrameBase::Form_Top.xfdl" showtitlebar="false" border="0px none"/>
            <ChildFrame id="MenuFrame" formurl="FrameBase::Form_Menu.xfdl" showtitlebar="false" height="30" border="0px none"/>
            <HFrameSet id="HFrameSet00" separatesize="150,*" color="#555555">
              <Frames>
                <ChildFrame id="LeftFrame" formurl="FrameBase::Form_Left.xfdl" dragmovetype="none" showtitlebar="false" color="#555555" border="0px none, 1px solid #c7c7c7, 0px none, 0px none"/>
                <VFrameSet id="VFrameSet01" separatesize="50,0,*,0" border="0px none" width="1366">
                  <Frames>
                    <ChildFrame id="MdiFrame" formurl="FrameBase::Form_Mdi.xfdl" showtitlebar="false" dragmovetype="none" border="0px none"/>
                    <ChildFrame id="MainFrame" formurl="FrameBase::Form_Main.xfdl" showtitlebar="false" border="0px none"/>
                    <FrameSet id="WorkFrame" color="#555555" border="0px none"/>
                    <ChildFrame id="LoginFrame" formurl="FrameBase::Form_Login.xfdl" showtitlebar="false" dragmovetype="none"/>
                  </Frames>
                </VFrameSet>
              </Frames>
            </HFrameSet>
            <ChildFrame id="BottomFrame" showtitlebar="false" dragmovetype="none"/>
          </Frames>
        </VFrameSet>
      </MainFrame>
    </Layout>
  </Application>
  <Script type="xscript5.1"><![CDATA[
/**************************************************************************
 * include 영역 
 **************************************************************************/
include "Base::libCommon.xjs";

/**************************************************************************
 * Application 변수 선언 영역
 **************************************************************************/
 
this.VFSet00;
this.VFSet01;
this.HFSet00;
this.TopFrame;
this.MenuFrame;
this.LeftFrame;
this.MdiFrame;
this.BottomFrame;
this.WorkFrame;
this.LoginFrame;
this.MainFrame;

// local, dev
this.resources_type = this.getVariable("resources_type");
this.Domain = "";
this.Login_svc = "";
this.Session_svc = "";
this.Menu_svc = "";
this.Admin_svc = "";

this.Application_onload = function(obj:nexacro.Application,e:nexacro.LoadEventInfo)
{
	//frameset 정의
	this.VFSet00 = this.mainframe.VFrameSet00;
	this.VFSet01 = this.mainframe.VFrameSet00.HFrameSet00.VFrameSet01;
	this.HFSet00 = this.mainframe.VFrameSet00.HFrameSet00;
	
	this.TopFrame = this.mainframe.VFrameSet00.TopFrame;	
	this.MenuFrame = this.mainframe.VFrameSet00.MenuFrame;	
	
	this.LeftFrame = this.mainframe.VFrameSet00.HFrameSet00.LeftFrame;
	
	this.MdiFrame = this.mainframe.VFrameSet00.HFrameSet00.VFrameSet01.MdiFrame;	
	this.WorkFrame = this.mainframe.VFrameSet00.HFrameSet00.VFrameSet01.WorkFrame;
	this.LoginFrame = this.mainframe.VFrameSet00.HFrameSet00.VFrameSet01.LoginFrame;
	this.BottomFrame = this.mainframe.VFrameSet00.BottomFrame;
	this.MainFrame	= this.mainframe.VFrameSet00.HFrameSet00.VFrameSet01.MainFrame;
	
	if(this.resources_type == "dev"){
		this.Loing_svc = "Login_svc_dev";
		this.Session_svc = "Session_svc_dev";
		this.Menu_svc = "Menu_svc_dev";
		this.Admin_svc = "Admin_svc_dev";
		this.Domain = this.getVariable("domain_dev");
	}else{
		this.Loing_svc = "Login_svc";
		this.Session_svc = "Session_svc";
		this.Menu_svc = "Menu_svc";
		this.Admin_svc = "Admin_svc";
		this.Domain = this.getVariable("domain");
	}
	
	this.gfn_sessionCheck(this.Session_svc, "gfn_sessionCallback");
	
	var objApp = nexacro.Application;
	var strURL = objApp.xadl;
	var arrSplit = strURL.split("//");
	var currentIp = strURL.split("//")[1].split("/")[0];
	
};

/**************************************************************************
* 사용자 FUNCTION 영역
**************************************************************************/

/**
* Function Name : gfn_initFrame
* Description   : frame 사이즈 변경 (login 화면)
* Arguments     : none
* Return        : none
*/ 
this.gfn_initFrame = function ()
{

	this.VFSet00.set_separatesize("0,0,*,0");
	this.HFSet00.set_separatesize("0,*");
	this.VFSet01.set_separatesize("0,0,0,*");
	
	if(this.LoginFrame.form.loginDiv.form.Div02.form.editId !== undefined){
		this.LoginFrame.form.loginDiv.form.Div02.form.editId.set_value("");
	}
	if(this.LoginFrame.form.loginDiv.form.Div02_00.form.editPw !== undefined){
		this.LoginFrame.form.loginDiv.form.Div02_00.form.editPw.set_value("");
	}
	
	
};

this.gfn_setFrameSize = function(){
	
	//framset 사이즈 변경
	this.VFSet00.set_separatesize("46,30,*,30");
	this.HFSet00.set_separatesize("150,*");
	this.VFSet01.set_separatesize("0,*,0,0");

}

this.gfn_menu = function(strSvc){

	var strSvcId    = "menu";
	var strSvcUrl   = strSvc + "::menuList.do";
	var inData      = "";
	var outData     = "gdsMenu=output1";
	var strArg      = "";
	var callBackFnc = "gfn_menuCallback";
	var isAsync     = true;
 
	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
            strSvcUrl ,       // trabsaction을 요청할 주소
            inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
            outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
            strArg,         // 입력값으로 보낼 arguments, a=b
            callBackFnc,       // transaction의 결과를 받을 Function 이름
            isAsync);         // 비동기통신 여부 [생략가능]

}

//처리콜백 함수
this.gfn_menuCallback = function(svcID,errorCode,errorMsg)
{
  // 에러 시 화면 처리 내역
  if(errorCode != 0)
  {
    this.alert(errorCode+"\n"+errorMsg);
    return;
  }

};


// 즐겨찾기 메뉴
this.gfn_favorite_menu = function(strSvc){

	var strSvcId    = "favoriteMenu";
	var strSvcUrl   = strSvc + "::favorite/list.do";
	var inData      = "";
	var outData     = "gdsFavoriteMenu=output1";
	var strArg      = "";
	var callBackFnc = "gfn_menuCallback";
	var isAsync     = true;

	this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
			strSvcUrl ,       // trabsaction을 요청할 주소
			inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
			outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
			strArg,         // 입력값으로 보낼 arguments, a=b
			callBackFnc,       // transaction의 결과를 받을 Function 이름
			isAsync);         // 비동기통신 여부 [생략가능]

}



// 세션 확인 후 처리콜백 함수
this.gfn_sessionCallback = function(svcID,errorCode,errorMsg)
{

	// 에러 시 화면 처리 내역
	if(errorCode != 0)
	{
    
		this.alert(errorCode+"\n"+errorMsg);
	
		switch(svcID)
		{
			case "session_check":	
				this.gfn_initFrame();
				//this.getOwnerFrame().form.go("Sample::Login_Test.xfdl");
			break;
		}
	
		return;
	}

	switch(svcID)
	{    
		case "session_check":
			console.log("로그인 성공");
			this.gfn_setFrameSize();
			this.gfn_menu(this.Menu_svc);
			this.gfn_favorite_menu(this.Admin_svc);
			this.gfn_codeList(this.Admin_svc);			
			//this.getOwnerFrame().form.go("FrameBase::Form_Main.xfdl");
		break; 
	}
};
]]></Script>
</ADL>
